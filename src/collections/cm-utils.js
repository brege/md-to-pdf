// src/collections/cm-utils.js
const path = require('path');


function deriveCollectionName(source) {
  if (!source || typeof source !== 'string') {
    return ''; // Or throw an error, depending on desired strictness
  }
  const baseName = path.basename(source);
  let sanitized = baseName.replace(/\.git$/, '');

  // Replace one or more non-alphanumeric (excluding hyphen/underscore) with a single hyphen.
  sanitized = sanitized.replace(/[^a-zA-Z0-9_-]+/g, '-');

  // Collapse any consecutive hyphens (e.g., "---" -> "-")
  sanitized = sanitized.replace(/-{2,}/g, '-');

  // Remove only leading hyphens, as per test expectations (e.g., '-my-repo' -> 'my-repo').
  // Trailing hyphens are preserved if they existed in the original sanitized baseName and not generated by replacement.
  sanitized = sanitized.replace(/^-+/, '');

  return sanitized;
}


function toPascalCase(str) {
  if (!str) return '';
  return str.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join('');
}


function isValidPluginName(pluginName) {
  if (!pluginName || typeof pluginName !== 'string') {
    return false;
  }
  // Allows alphanumeric, and hyphens not at start/end. Does not allow underscore.
  const regex = /^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$/;
  return regex.test(pluginName);
}

module.exports = {
  deriveCollectionName,
  toPascalCase,
  isValidPluginName, // Export the new utility
};
