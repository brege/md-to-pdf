# test/config.test.yaml
# Configuration for automated testing. Aims for predictable outputs.

# --- Global Settings ---
pdf_viewer: null # Disable auto-opening PDFs during tests

global_pdf_options:
  format: "Letter"
  printBackground: true
  margin:
    top: "1in"
    right: "1in"
    bottom: "1in"
    left: "1in"
  # For testing, we generally don't want variable header/footers unless testing them.
  # displayHeaderFooter: false

global_remove_shortcodes:
  - "" # Remove HTML comments

# --- Document Type Plugin Registrations (NEW SECTION) ---
# This section tells PluginManager where to find the actual configuration
# for each plugin type. Paths are relative to the project root.
document_type_plugins:
  default: "plugins/default/default.config.yaml"
  cv: "plugins/cv/cv.config.yaml"
  cover-letter: "plugins/cover-letter/cover-letter.config.yaml"
  recipe: "plugins/recipe/recipe.config.yaml" # Crucial for hugo-export-each test
  recipe-book: "plugins/recipe-book/recipe-book.config.yaml"

# --- Document Type Specific Configurations (OLD STYLE - DEPRECATED for types moved to plugins) ---
# This section is now primarily for any parts of the test suite that might still directly
# use getTypeConfig for types not yet fully transitioned or for specific overrides
# if a test case needed to mock a type config without a full plugin structure.
# For commands like 'convert --plugin recipe', 'generate recipe-book', or
# 'hugo-export-each --base-plugin recipe', the config will be loaded from the
# path specified in 'document_type_plugins' above.
document_types:
  default: # This 'default' would only be used if getTypeConfig('default', testConfig) is called directly.
           # The 'default' plugin uses plugins/default/default.config.yaml.
    description: "Legacy test default settings."
    css_files: ["default.css"] # This would refer to plugins/default/default.css if base path is resolved correctly by old code
    pdf_options: { format: "A4" }
    toc_options: { enabled: false }
    inject_fm_title_as_h1: false
    aggressiveHeadingCleanup: false

  # The following are examples of how they were. For tests using PluginManager,
  # the actual plugin configs (e.g., plugins/cv/cv.config.yaml) are now the source of truth.
  # These can be removed if no old test logic relies on them via getTypeConfig.

  # cv:
  #   description: "Test settings for CV documents."
  #   css_files: ["cv.css"] # Would be plugins/cv/cv.css
  #   pdf_options:
  #     format: "Letter"
  #     margin: { top: "0.75in", right: "0.75in", bottom: "0.75in", left: "0.75in" }
  #   toc_options: { enabled: false }
  #   inject_fm_title_as_h1: true

  # cover-letter:
  #   description: "Test settings for Cover Letter documents."
  #   css_files: ["cover-letter.css"] # Would be plugins/cover-letter/cover-letter.css
  #   pdf_options:
  #     format: "Letter"
  #     margin: { top: "1in", right: "1in", bottom: "1in", left: "1in" }
  #   toc_options: { enabled: false }

  # recipe: # This specific 'recipe' config under 'document_types' is no longer directly used by hugo-export-each's base plugin loading
  #   description: "Test settings for individual Recipe documents."
  #   css_files: ["recipe.css"] # Would be plugins/recipe/recipe.css
  #   pdf_options:
  #     margin: { top: "0.8in", right: "0.8in", bottom: "0.8in", left: "0.8in" }
  #   toc_options: { enabled: false }
  #   remove_shortcodes_patterns:
  #     - "{{%\\s*recipe\\s*%}}"
  #     - "{{%\\s*/recipe\\s*%}}"
  #   inject_fm_title_as_h1: true
  #   aggressiveHeadingCleanup: true

  # recipe-book: # The 'generate recipe-book' command will use plugins/recipe-book/recipe-book.config.yaml
  #   description: "Test settings for the Recipe Book PDF."
  #   css_files: ["recipe.css", "recipe-book.css"] # Would be from plugins/recipe-book/
  #   pdf_options:
  #     margin: { top: "0.8in", right: "0.8in", bottom: "0.8in", left: "0.8in" }
  #   cover_page:
  #     enabled: true
  #     title: "Test Recipe Book"
  #     subtitle: "Generated by Automated Tests"
  #     author: "Test Script"
  #   toc_options:
  #     enabled: true
  #     placeholder: "%%RECIPE_BOOK_TOC%%"
  #     level: [1]
  #     listType: "ol"
  #   remove_shortcodes_patterns:
  #     - "{{%\\s*recipe\\s*%}}"
  #     - "{{%\\s*/recipe\\s*%}}"

# --- Hugo Export Each Command Specific Configuration ---
# This section remains important for the rules specific to hugo-export-each.
hugo_export_each:
  default_rules: # Ruleset used by the test script
    author_extraction_regex: "^[ \\t]*\\**(?:Chef|Chefs):\\s*\\**([^\\*<\\n\\r]+)"
    author_is_list_regex: "^[ \\t]*\\**(?:Chefs):"
    additional_shortcodes_to_remove:
      - "{{%\\s*recipe\\s*%}}"
      - "{{%\\s*/recipe\\s*%}}"
      # Add other Hugo-specific shortcodes present in examples/hugo-example if any.
