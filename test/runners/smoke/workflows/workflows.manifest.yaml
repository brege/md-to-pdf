name: collection, plugin, and convert (Workflow Tests) enablement
test_id: 4.1.1
base_command: md-to-pdf
tags:
  - workflow
  - collection
  - plugin
  - git
  - enable
  - disable
  - remove
workflow: true
scenarios:
  - description: add a collection from a remote repository
    test_id: 4.1.1.1
    args: >-
      collection add https://github.com/brege/md-to-pdf-plugins.git --name
      lifecycle-collection
    expect:
      contains: Successfully cloned repository
  - description: enable a plugin from the collection
    test_id: 4.1.1.2
    args: plugin enable lifecycle-collection/restaurant-menu
    expect:
      contains: Plugin enabled successfully
  - description: convert a markdown document using the plugin
    test_id: 4.1.1.3
    args: >-
      convert {{paths.simpleMdFixture}} --plugin restaurant-menu --outdir
      {{tmpdir}} --no-open
    expect:
      contains: convert command finished
      file_exists: "{{tmpdir}}/restaurant-menu.pdf"
  - description: disable the plugin
    test_id: 4.1.1.4
    args: plugin disable restaurant-menu
    expect:
      contains: Plugin disabled successfully
  - description: and remove the collection
    test_id: 4.1.1.5
    args: collection remove lifecycle-collection
    expect:
      contains: Collection directory removed successfully
---
name: plugin create, add, and convert (Workflow Test) archetyping
test_id: 4.1.2
base_command: md-to-pdf
tags:
  - workflow
  - archetype
  - plugin
  - convert
  - add
workflow: true
scenarios:
  - description: create a new archetyped plugin from the bundled cv plugin
    test_id: 4.1.2.1
    args: plugin create my-custom-cv --from cv --outdir {{tmpdir}}
    expect:
      contains_all:
        - created successfully
        - my-custom-cv
  - description: add and enable the newly archetyped plugin
    test_id: 4.1.2.2
    args: plugin add {{tmpdir}}/my-custom-cv
    expect:
      contains: Successfully processed 'plugin add'
  - description: convert a markdown document using the new plugin
    test_id: 4.1.2.3
    args: >-
      convert {{paths.simpleMdFixture}} --plugin my-custom-cv --outdir
      {{tmpdir}} --no-open
    expect:
      contains: convert command finished
      file_exists: "{{tmpdir}}/simple.pdf"
---
name: plugin create, add, and convert (Workflow Test) external archetyping
test_id: 4.1.5
base_command: md-to-pdf
tags:
  - workflow
  - plugin
  - archetype
  - enable
  - removal
workflow: true
scenarios:
  - description: create plugin-A externally, using --outdir
    test_id: 4.1.5.1
    args: plugin create plugin-A --from default --outdir {{tmpdir}}
    expect:
      contains_all:
        - created successfully
        - plugin-A
  - description: create plugin-B externally, using --outdir
    test_id: 4.1.5.2
    args: plugin create plugin-B --from default --outdir {{tmpdir}}
    expect:
      contains_all:
        - created successfully
        - plugin-B
  - description: add and enable the externally created plugin-A to the registry
    test_id: 4.1.5.3
    args: plugin add {{tmpdir}}/plugin-A
    expect:
      contains: Successfully processed 'plugin add'
  - description: add and enable the externally created plugin-B to the registry
    test_id: 4.1.5.4
    args: plugin add {{tmpdir}}/plugin-B
    expect:
      contains: Successfully processed 'plugin add'
  - description: verify plugin-A and plugin-B are in the registry
    test_id: 4.1.5.5
    args: plugin list --short
    expect:
      contains_all:
        - plugin-A
        - plugin-B
  - description: disable plugin-A
    test_id: 4.1.5.6
    args: plugin disable plugin-A
    expect:
      contains: Plugin disabled successfully
  - description: enable plugin-A back to active state
    test_id: 4.1.5.7
    args: plugin enable plugin-A
    expect:
      contains: Plugin enabled successfully
  - description: remove plugin-A from the registry
    test_id: 4.1.5.8
    args: plugin remove plugin-A
    expect:
      contains: removed successfully
  - description: verify plugin-A no longer in the registry after removal
    test_id: 4.1.5.9
    args: plugin list --short
    expect_not:
      contains: plugin-A
  - description: verify plugin-B is still in the registry
    test_id: 4.1.5.10
    args: plugin list --short
    expect:
      contains: plugin-B
---
name: renaming a plugin (Workflow Test)
test_id: 4.1.6
base_command: md-to-pdf
tags:
  - workflow
  - plugin
  - rename
workflow: true
scenarios:
  - description: create a new plugin from the bundled cv plugin
    test_id: 4.1.6.1
    args: plugin create my-custom-cv --from cv --outdir {{tmpdir}}
    expect:
      contains_all:
        - created successfully
        - my-custom-cv
  - description: add and enable the newly created plugin
    test_id: 4.1.6.2
    args: plugin add {{tmpdir}}/my-custom-cv
    expect:
      contains: Successfully processed 'plugin add'
  - description: create a new plugin from the recently added plugin
    test_id: 4.1.6.3
    args: plugin create my-custom-cv-2 --from my-custom-cv --outdir {{tmpdir}}
    expect:
      contains_all:
        - created successfully
        - my-custom-cv-2
  - description: add and enable the newly created plugin
    test_id: 4.1.6.4
    args: plugin add {{tmpdir}}/my-custom-cv-2
    expect:
      contains: Successfully processed 'plugin add'
  - description: remove the original plugin
    test_id: 4.1.6.5
    args: plugin remove my-custom-cv
    expect:
      contains: removed successfully
  - description: verify the renamed plugin is in the registry
    test_id: 4.1.6.6
    args: plugin list --short
    expect:
      contains: my-custom-cv-2
