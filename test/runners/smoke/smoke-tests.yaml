# Smoke test manifest - all CLI smoke tests
name: "3.1.1 Validate config command"
base_command: "md-to-pdf"
tags: [config, pure, cli, smoke]
scenarios:
  - description: "3.1.1.1 Global config (default)"
    args: "config"
    expect:
      contains: "pdf_viewer:"

  - description: "3.1.1.2 Global config (--pure)"
    args: "config --pure"
    expect:
      yaml_has_key: "pdf_viewer"

  - description: "3.1.1.3 Plugin config (default)"
    args: "config --plugin cv"
    expect:
      contains_all: ["handler_script:", "Plugin Base Path:"]

  - description: "3.1.1.4 Plugin config (--pure)"
    args: "config --plugin cv --pure"
    expect:
      yaml_has_key: "handler_script"

---
name: "3.1.2 Validate help commands"
base_command: "md-to-pdf"
tags: [cli, help, smoke]
discovery:
  type: "cli_commands"
  source: "src/cli/commands"
  exclude: ["$0", "plugin", "collection"]
scenarios:
  - description: "3.1.2.1 Help for {command}"
    args: "{command} --help"
    expect:
      executes: true

---
name: "3.2.1 Validate plugin list command"
base_command: "md-to-pdf"
tags: [cli, smoke, plugin, list]
scenarios:
  - description: "3.2.1.1 List plugins (default)"
    args: "plugin list"
    expect:
      contains: "usable by md-to-pdf"

  - description: "3.2.1.2 List enabled plugins"
    args: "plugin list --enabled"
    expect:
      contains: "Enabled plugins"

  - description: "3.2.1.3 List available plugins"
    args: "plugin list --available"
    expect:
      contains_any: ["Available CM-managed plugins", "No CM-managed plugins found"]
  - description: "3.2.1.4 List disabled plugins"
    args: "plugin list --disabled"
    expect:
      contains_any: ["Disabled (but available) CM-managed plugins", "No disabled (but available) CM-managed plugins found."]

  - description: "3.2.1.5 List plugins (--short)"
    args: "plugin list --short"
    expect:
      contains_any: ["Summary for all known plugins"]

---
name: "3.3.1 Validate collection list command"
base_command: "md-to-pdf"
tags: [cli, smoke, collection, list]
scenarios:
  - description: "3.3.1.1 List collection names (short)"
    args: "collection list names --short"
    expect:
      contains_any: ["Downloaded plugin collections", "No downloaded collections found"]

  - description: "3.3.1.2 List downloaded collections (default)"
    args: "collection list names"
    expect:
      contains_any: ["Downloaded plugin collections", "No downloaded collections found"]

  - description: "3.3.1.3 List available plugins from collections"
    args: "collection list available"
    expect:
      contains_any: ["Available plugins", "No available plugins found in any collection"]

  - description: "3.3.1.4 List enabled plugins from collections"
    args: "collection list enabled"
    expect:
      contains_any: ["Enabled plugins", "No enabled plugins found"]

  - description: "3.3.1.5 List all plugins (alias for available)"
    args: "collection list all"
    expect:
      contains_any: ["Available plugins", "No available plugins found in any collection"]

---
name: "3.2.2 Validate bundled plugins"
base_command: "md-to-pdf"
tags: [cli, smoke, plugin, bundled, validate]
discovery:
  type: "directory_scan"
  source: "plugins"
  filter: "directories"
scenarios:
  - description: "3.2.2.1 Validate plugin {item}"
    args: "plugin validate {item}"
    expect:
      executes: true

---
name: "3.2.3 Plugin List States (Full vs Empty)"
base_command: "md-to-pdf"
tags: [cli, smoke, plugin, list, enable, disable]
visual_focus: "empty state handling, table formatting consistency"
scenarios:
  - description: "3.2.3.1 Plugin list --available (likely empty) - empty state formatting"
    args: "plugin list --available"
    expect:
      executes: true
    visual_check: "Clean empty state with consistent theming and helpful messaging"

  - description: "3.2.3.2 Plugin list --disabled (likely empty) - empty state vs populated"
    args: "plugin list --disabled"
    expect:
      executes: true
    visual_check: "Empty state handling or populated list with proper disabled styling"

  - description: "3.2.3.3 Plugin list (populated) - full table formatting"
    args: "plugin list"
    expect:
      executes: true
    visual_check: "Rich populated table with headers, colors, and proper alignment"

---
name: "3.3.2 Collection List States (Full vs Empty)"
base_command: "md-to-pdf"
tags: [cli, smoke, collection, list, enable, disable, happy-path, sad-path]
visual_focus: "empty state consistency, messaging clarity"
scenarios:
  - description: "3.3.2.1 Collection list names (likely empty) - empty state"
    args: "collection list names"
    expect:
      executes: true
    visual_check: "Clean empty state messaging with consistent theming"

  - description: "3.3.2.2 Collection list available (empty) - no available plugins state"
    args: "collection list available"
    expect:
      executes: true
    visual_check: "Empty state for no available collection plugins"

  - description: "3.3.2.3 Collection list enabled (empty) - no enabled plugins state"
    args: "collection list enabled"
    expect:
      executes: true
    visual_check: "Empty state for no enabled collection plugins"

---
name: "3.4.1 Context Switching Empty States"
base_command: "md-to-pdf"
tags: [cli, smoke, coll-root, sad-path]
visual_focus: "error handling, context isolation, empty state consistency"
scenarios:
  - description: "3.4.1.1 Plugin list with non-existent collection root - context error handling"
    args: "plugin list --coll-root /tmp/nonexistent"
    expect:
      executes: true
    visual_check: "Graceful handling of missing collection root with clear messaging"

  - description: "3.4.1.2 Collection list with non-existent collection root - context isolation"
    args: "collection list names --coll-root /tmp/nonexistent"
    expect:
      executes: true
    visual_check: "Clean empty state when collection root doesn't exist"

