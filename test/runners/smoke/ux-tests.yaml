# UX/Visual validation tests - validates theming and formatting across all CLI commands
---
name: "Plugin List Commands (Visual Validation)"
base_command: "md-to-pdf"
visual_focus: "table formatting, theming, alignment"
scenarios:
  - description: "Plugin list (default long-form) - should show rich themed table"
    args: "plugin list"
    expect:
      executes: true
    visual_check: "Rich colored table with proper headers, enabled/disabled status colors"

  - description: "Plugin list --short - should show aligned table headers"
    args: "plugin list --short"
    expect:
      executes: true
    visual_check: "Compact table with aligned headers and content, proper theming"

  - description: "Plugin list --enabled - themed success colors"
    args: "plugin list --enabled"
    expect:
      executes: true
    visual_check: "Success/enabled colors, clean formatting"

  - description: "Plugin list --available - may show empty state"
    args: "plugin list --available"
    expect:
      executes: true
    visual_check: "Handle empty state gracefully with themed messaging"

  - description: "Plugin list --disabled - may show empty state"
    args: "plugin list --disabled"
    expect:
      executes: true
    visual_check: "Handle empty state or show disabled plugins with muted colors"

---
name: "Collection List Commands (Visual Validation)"
base_command: "md-to-pdf"
visual_focus: "empty states, table alignment, messaging"
scenarios:
  - description: "Collection list names (default) - themed empty state"
    args: "collection list names"
    expect:
      executes: true
    visual_check: "Clean empty state messaging with proper theming"

  - description: "Collection list names --short - compact empty state"
    args: "collection list names --short"
    expect:
      executes: true
    visual_check: "Compact empty state, no alignment issues"

  - description: "Collection list available - empty state handling"
    args: "collection list available"
    expect:
      executes: true
    visual_check: "Themed empty state for no available plugins"

  - description: "Collection list enabled - empty state"
    args: "collection list enabled"
    expect:
      executes: true
    visual_check: "Clean empty state for no enabled collection plugins"

---
name: "Config Commands (Visual Validation)"
base_command: "md-to-pdf"
visual_focus: "YAML formatting, syntax highlighting, structure"
scenarios:
  - description: "Global config display - syntax highlighted YAML"
    args: "config"
    expect:
      contains: "pdf_viewer:"
    visual_check: "Proper YAML syntax highlighting with gruvbox colors"

  - description: "Plugin config (cv) - structure and highlighting"
    args: "config --plugin cv"
    expect:
      contains_all: ["handler_script:", "Plugin Base Path:"]
    visual_check: "Plugin config with clear structure, themed paths and values"

  - description: "Pure YAML output - clean formatting"
    args: "config --pure"
    expect:
      yaml_has_key: "pdf_viewer"
    visual_check: "Clean YAML without extra formatting, readable structure"

---
name: "Plugin Validation Commands (Visual Validation)"
base_command: "md-to-pdf"
visual_focus: "validation output, status indicators, progress"
scenarios:
  - description: "Plugin validation for cv - rich status output"
    args: "plugin validate cv"
    expect:
      executes: true
    visual_check: "Validation progress with themed status indicators, clear success/warning colors"

---
name: "Different Config Contexts (Visual Validation)"
base_command: "md-to-pdf"
visual_focus: "empty states, error handling, context switching"
scenarios:
  - description: "Plugin list with non-existent collection root"
    args: "plugin list --coll-root /tmp/nonexistent"
    expect:
      executes: true
    visual_check: "Graceful handling of missing collection root, clear error messaging"

  - description: "Collection list with non-existent collection root"
    args: "collection list names --coll-root /tmp/nonexistent"
    expect:
      executes: true
    visual_check: "Clean empty state when no collection root exists"

  - description: "Config with non-existent config file"
    args: "config --config /tmp/nonexistent.yaml"
    expect:
      executes: true
    visual_check: "Default config display when custom config doesn't exist"

---
name: "Help Commands (Visual Validation)"
base_command: "md-to-pdf"
visual_focus: "help formatting, command structure, readability"
scenarios:
  - description: "Main help - command overview with theming"
    args: "--help"
    expect:
      executes: true
    visual_check: "Well-formatted help with command highlighting and structure"

  - description: "Plugin help - subcommand structure"
    args: "plugin --help"
    expect:
      executes: true
    visual_check: "Clear subcommand layout with proper theming"

  - description: "Collection help - subcommand structure"
    args: "collection --help"
    expect:
      executes: true
    visual_check: "Structured help output with themed sections"

  - description: "Convert help - detailed options"
    args: "convert --help"
    expect:
      executes: true
    visual_check: "Comprehensive help with option descriptions and examples"