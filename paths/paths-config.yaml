# paths/paths-config.yaml
# Declarative Master Configuration for the Path Registry Generator

metadata:
  version: "1.0"
  generated_warning: "Auto-generated - do not edit manually"
  regenerate_command: "npm run paths"

registries:
  # Flattened single registry (generates paths/index.js only)
  main:
    output_file: "paths/index.js"
    title: "Project Path Registry (Flattened)"
    architecture: "Feature-based with dependency ranking"
    architecture_sections:
      foundation:
        comment: "Project Foundation"
        items:
          project_root: "path.resolve(__dirname, '..')"
          paths_path: "path.join(__dirname, 'index.js')"
          package_json_path: "path.join(projectRoot, 'package.json')"
          node_modules_path: "path.join(projectRoot, 'node_modules')"
          config_example_path: "path.join(projectRoot, 'config.example.yaml')"
          default_config_path: "path.join(projectRoot, 'config.yaml')"
          factory_default_config_path: "path.join(projectRoot, 'config.example.yaml')"
      interfaces:
        comment: "CLI & External Interfaces"
        items:
          cli_path: "path.join(projectRoot, 'cli.js')"
          template_basic_plugin: "path.join(projectRoot, 'plugins', 'template-basic')"
      boundaries:
        comment: "Architectural Boundaries"
        items:
          src_root: "path.join(projectRoot, 'src')"
          assets_root: "path.join(projectRoot, 'assets')"
          scripts_root: "path.join(projectRoot, 'scripts')"
          test_root: "path.join(projectRoot, 'test', 'runners')"
          cli_commands_path: "path.join(srcRoot, 'cli', 'commands')"
          collections_commands_root: "path.join(srcRoot, 'collections', 'commands')"
          scripts_shared_root: "path.join(scriptsRoot, 'shared')"
          test_shared_root: "path.join(testRoot, 'shared')"
      tooling:
        comment: "Development & Build Tools"
        items:
          eslint_path: "path.join(nodeModulesPath, '.bin', 'eslint')"
          mocha_path: "path.join(nodeModulesPath, '.bin', 'mocha')"
          mocharc_path: "path.join(projectRoot, '.mocharc.js')"
          test_file_helpers_path: "path.join(testSharedRoot, 'test-helpers.js')"
      statics:
        comment: "Key Static File Paths"
        items:
          paths_config_path: "path.join(projectRoot, 'paths', 'paths-config.yaml')"
          katex_path: "path.join(assetsRoot, 'katex.min.css')"
          base_plugin_schema_path: "path.join(srcRoot, 'validators', 'base-plugin.schema.json')"
          find_litter_rules_path: "path.join(assetsRoot, 'litter-list.txt')"
          linting_config_path: "path.join(scriptsRoot, 'linting', 'linting-config.yaml')"
          test_config_path: "path.join(testRoot, 'shared', 'config.test.yaml')"
      collections:
        comment: "Collections System Constants"
        items:
          collections_metadata_filename: "'.collection-metadata.yaml'"
          collections_enabled_manifest_filename: "'enabled.yaml'"
          collections_user_plugins_dirname: "'_user_added_plugins'"
          collections_default_archetype_dirname: "'user-plugins'"
      test_directories:
        comment: "Test Organization Directories"
        items:
          docs_test_dir: "path.join(testRoot, 'docs')"
          e2e_test_dir: "path.join(testRoot, 'e2e')"
          fixtures_dir: "path.join(testRoot, 'fixtures')"
          integration_test_dir: "path.join(testRoot, 'integration')"
          linting_test_dir: "path.join(testRoot, 'linting')"
          scripts_test_dir: "path.join(testRoot, 'scripts')"
          shared_test_dir: "path.join(testRoot, 'shared')"
          smoke_test_dir: "path.join(testRoot, 'smoke')"
      test_harnesses:
        comment: "Test Harnesses & Factories"
        items:
          e2e_harness: "path.join(testRoot, 'e2e/e2e-harness.js')"
          test_runner_factory_e2e: "path.join(testRoot, 'e2e/test-runner-factory.js')"
          linting_unit_harness: "path.join(testRoot, 'linting/unit/linting-unit-harness.js')"
          test_runner_factory_linting: "path.join(testRoot, 'linting/unit/test-runner-factory.js')"
          setup_file: "path.join(testRoot, 'setup.js')"
      test_fixtures:
        comment: "Test Fixtures"
        items:
          simple_md_fixture: "path.join(fixturesDir, 'markdown/simple.md')"
          simple_md_fixture_with_fm: "path.join(fixturesDir, 'markdown/with-front-matter.md')"
          hugo_example_fixture_path: "path.join(fixturesDir, 'hugo-example')"
          refresh_fixtures_path: "path.join(fixturesDir, 'refresh-fixtures.js')"
          create_dummy_plugin_path: "path.join(fixturesDir, 'create-dummy-plugin.js')"
      linting_foundation:
        comment: "Linting Infrastructure Foundation"
        items:
          linting_root: "path.join(scriptsRoot, 'linting')"
    features:
      # Core Application Features
      cli:
        comment: "Command Line Interface"
        pattern: "src/cli/**/*.js"
        rank: 0
      core:
        comment: "Core Processing Engine"
        pattern: "src/core/**/*.js"
        rank: 1
      plugins:
        comment: "Plugin System"
        pattern: "src/plugins/**/*.js"
        rank: 2
      collections:
        comment: "Collections Management"
        pattern: "src/collections/**/*.js"
        rank: 2
      config:
        comment: "Configuration System"
        pattern: "src/config/**/*.js"
        rank: 1
      completion:
        comment: "CLI Completion Engine"
        pattern: "src/completion/**/*.js"
        rank: 3
      utils:
        comment: "Utilities & Helpers"
        pattern: "src/utils/**/*.js"
        rank: 3
      validators:
        comment: "Validation Framework"
        pattern: "src/validators/**/*.js"
        rank: 2

      # Scripts Features
      ai:
        comment: "AI Tooling"
        pattern: "scripts/ai/**/*.js"
        rank: 0
      batch:
        comment: "Batch Processing Scripts"
        pattern: "scripts/batch/**/*"
        rank: 1
      docs:
        comment: "Documentation Helpers"
        pattern: "scripts/docs/**/*.js"
        rank: 1
      script_shared:
        comment: "Shared Script Utilities"
        pattern: "scripts/shared/**/*.js"
        rank: 2

      # Linting Features
      linting_core:
        comment: "Core Linting Infrastructure"
        pattern: "scripts/linting/lint*.js"
        rank: 0
      code:
        comment: "Code Quality Linters"
        pattern: "scripts/linting/code/**/*.js"
        rank: 1
      linting_docs:
        comment: "Documentation Linters"
        pattern: "scripts/linting/docs/**/*.js"
        rank: 1
      linting_validators:
        comment: "Validation Linters"
        pattern: "scripts/linting/validators/**/*.js"
        rank: 2
      lib:
        comment: "Linting Utilities & Helpers"
        pattern: "scripts/linting/lib/**/*.js"
        rank: 3

      # Test Features
      core_integration:
        comment: "Core Module Integration Tests"
        pattern: "test/runners/integration/core/**/*.js"
        rank: 0
      config_integration:
        comment: "Configuration System Integration Tests"
        pattern: "test/runners/integration/config/**/*.js"
        rank: 1
      plugins_integration:
        comment: "Plugin System Integration Tests"
        pattern: "test/runners/integration/plugins/**/*.js"
        rank: 1
      collections_integration:
        comment: "Collections System Integration Tests"
        pattern: "test/runners/integration/collections/**/*.js"
        rank: 1
      e2e_core:
        comment: "End-to-End Core Workflow Tests"
        pattern: "test/runners/e2e/all-e2e.test.js"
        rank: 1
      e2e_manifests:
        comment: "E2E Manifest Tests"
        pattern: "test/runners/e2e/*.manifest.js"
        rank: 2
      linting_tests:
        comment: "Linting Unit Tests"
        pattern: "test/runners/linting/unit/**/*.js"
        rank: 2
      shared_utilities:
        comment: "Shared Test Utilities & Helpers"
        pattern: "test/runners/shared/**/*.js"
        rank: 3
      yaml_workflow_tests:
        comment: "YAML-driven Workflow Tests"
        pattern: "test/runners/smoke/workflows/*.yaml"
      yaml_validator_tests:
        comment: "YAML-driven Bundled Plugin Tests"
        pattern: "test/runners/smoke/validators/*.yaml"
      yaml_tests:
        comment: "YAML-driven End-to-End Tests"
        pattern: "test/runners/smoke/*.manifest.yaml"
      yaml_runners:
        comment: "YAML-driven Test Runner"
        pattern: "test/runners/smoke/*.js"
    contextual_naming:
      "add.command.js":
        cli/commands/collection: "collections_add_command"
        cli/commands/plugin: "plugin_add_command"
      "list.command.js":
        cli/commands/collection: "collections_list_command"
        cli/commands/plugin: "plugin_list_command"
      "remove.command.js":
        cli/commands/collection: "collections_remove_command"
      "update.command.js":
        cli/commands/collection: "collections_update_command"
      add:
        collections/commands: "collections_add"
      list:
        collections/commands: "collections_list"
      remove:
        collections/commands: "collections_remove"
      update:
        collections/commands: "collections_update"
      "index.js":
        src/collections: "collections_index"
        src/utils/formatters: "formatters_index"

      # Test naming patterns
      "all-e2e.test.js":
        "test/runners/e2e": "allE2eTest"
      "e2e-harness.js":
        "test/runners/e2e": "e2eHarness"
      "config-resolver.test.js":
        "test/runners/integration/config": "configResolverIntegrationTest"
      "main-config-loader.test.js":
        "test/runners/integration/config": "mainConfigLoaderIntegrationTest"
      "plugin-config-loader.test.js":
        "test/runners/integration/config": "pluginConfigLoaderIntegrationTest"
      "plugin-manager.test.js":
        "test/runners/integration/plugins": "pluginManagerIntegrationTest"
      "plugin-determiner.test.js":
        "test/runners/integration/plugins": "pluginDeterminerIntegrationTest"
      "plugin-registry-builder.test.js":
        "test/runners/integration/plugins": "pluginRegistryBuilderIntegrationTest"
      "plugin-validator.test.js":
        "test/runners/integration/plugins": "pluginValidatorIntegrationTest"
      "collections-manager.test.js":
        "test/runners/integration/collections": "collectionsManagerIntegrationTest"
      "cm-utils.test.js":
        "test/runners/integration/collections": "cmUtilsIntegrationTest"
      "default-handler.test.js":
        "test/runners/integration/core": "defaultHandlerIntegrationTest"
      "pdf-generator.test.js":
        "test/runners/integration/core": "pdfGeneratorIntegrationTest"
      "math-integration.test.js":
        "test/runners/integration/core": "mathIntegrationTest"
      ".factory.js":
        "test/runners/integration": "factory"
      ".manifest.js":
        "test/runners": "manifest"
      "test-helpers.js":
        "test/runners/shared": "testHelpers"
      "test-logger.js":
        "test/runners/shared": "testLogger"
      "capture-logs.js":
        "test/runners/shared": "captureLogs"
      "all-linting-unit.test.js":
        "test/runners/linting/unit": "allLintingUnitTest"



rank_definitions:
  0: "user-facing interfaces"
  1: "essential operations"
  2: "supportive operations"
  3: "enhancements & utilities"
